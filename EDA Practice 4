{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "484448a5",
   "metadata": {
    "_cell_guid": "b1076dfc-b9ad-4769-8c92-a6c4dae69d19",
    "_uuid": "8f2839f25d086af736a60e9eeb907d3b93b6e0e5",
    "execution": {
     "iopub.execute_input": "2024-08-24T19:05:40.076385Z",
     "iopub.status.busy": "2024-08-24T19:05:40.075162Z",
     "iopub.status.idle": "2024-08-24T19:05:40.538756Z",
     "shell.execute_reply": "2024-08-24T19:05:40.537306Z"
    },
    "papermill": {
     "duration": 0.478102,
     "end_time": "2024-08-24T19:05:40.541536",
     "exception": false,
     "start_time": "2024-08-24T19:05:40.063434",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/kaggle/input/house-price-prediction-seattle/train.csv\n",
      "/kaggle/input/house-price-prediction-seattle/test.csv\n"
     ]
    }
   ],
   "source": [
    "# This Python 3 environment comes with many helpful analytics libraries installed\n",
    "# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n",
    "# For example, here's several helpful packages to load\n",
    "\n",
    "import numpy as np # linear algebra\n",
    "import pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n",
    "\n",
    "# Input data files are available in the read-only \"../input/\" directory\n",
    "# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n",
    "\n",
    "import os\n",
    "for dirname, _, filenames in os.walk('/kaggle/input'):\n",
    "    for filename in filenames:\n",
    "        print(os.path.join(dirname, filename))\n",
    "\n",
    "# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n",
    "# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "a8cb2917",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-08-24T19:05:40.560903Z",
     "iopub.status.busy": "2024-08-24T19:05:40.560290Z",
     "iopub.status.idle": "2024-08-24T19:05:42.284603Z",
     "shell.execute_reply": "2024-08-24T19:05:42.283500Z"
    },
    "papermill": {
     "duration": 1.737122,
     "end_time": "2024-08-24T19:05:42.287384",
     "exception": false,
     "start_time": "2024-08-24T19:05:40.550262",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import matplotlib.pyplot as plt\n",
    "import numpy as np \n",
    "import seaborn as sns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "617e5360",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-08-24T19:05:42.305871Z",
     "iopub.status.busy": "2024-08-24T19:05:42.305268Z",
     "iopub.status.idle": "2024-08-24T19:05:42.342425Z",
     "shell.execute_reply": "2024-08-24T19:05:42.341180Z"
    },
    "papermill": {
     "duration": 0.049676,
     "end_time": "2024-08-24T19:05:42.345296",
     "exception": false,
     "start_time": "2024-08-24T19:05:42.295620",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "data_train = pd.read_csv('/kaggle/input/house-price-prediction-seattle/train.csv')\n",
    "data_test = pd.read_csv('/kaggle/input/house-price-prediction-seattle/test.csv')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c51549ef",
   "metadata": {
    "papermill": {
     "duration": 0.009261,
     "end_time": "2024-08-24T19:05:42.363305",
     "exception": false,
     "start_time": "2024-08-24T19:05:42.354044",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## Merging the test and train data together:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "522b64fc",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-08-24T19:05:42.381804Z",
     "iopub.status.busy": "2024-08-24T19:05:42.381333Z",
     "iopub.status.idle": "2024-08-24T19:05:42.427649Z",
     "shell.execute_reply": "2024-08-24T19:05:42.426494Z"
    },
    "papermill": {
     "duration": 0.058669,
     "end_time": "2024-08-24T19:05:42.430363",
     "exception": false,
     "start_time": "2024-08-24T19:05:42.371694",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>beds</th>\n",
       "      <th>baths</th>\n",
       "      <th>size</th>\n",
       "      <th>size_units</th>\n",
       "      <th>lot_size</th>\n",
       "      <th>lot_size_units</th>\n",
       "      <th>zip_code</th>\n",
       "      <th>price</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>3</td>\n",
       "      <td>2.5</td>\n",
       "      <td>2590.0</td>\n",
       "      <td>sqft</td>\n",
       "      <td>6000.00</td>\n",
       "      <td>sqft</td>\n",
       "      <td>98144</td>\n",
       "      <td>795000.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>4</td>\n",
       "      <td>2.0</td>\n",
       "      <td>2240.0</td>\n",
       "      <td>sqft</td>\n",
       "      <td>0.31</td>\n",
       "      <td>acre</td>\n",
       "      <td>98106</td>\n",
       "      <td>915000.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>4</td>\n",
       "      <td>3.0</td>\n",
       "      <td>2040.0</td>\n",
       "      <td>sqft</td>\n",
       "      <td>3783.00</td>\n",
       "      <td>sqft</td>\n",
       "      <td>98107</td>\n",
       "      <td>950000.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>4</td>\n",
       "      <td>3.0</td>\n",
       "      <td>3800.0</td>\n",
       "      <td>sqft</td>\n",
       "      <td>5175.00</td>\n",
       "      <td>sqft</td>\n",
       "      <td>98199</td>\n",
       "      <td>1950000.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2</td>\n",
       "      <td>2.0</td>\n",
       "      <td>1042.0</td>\n",
       "      <td>sqft</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>98102</td>\n",
       "      <td>950000.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2516</th>\n",
       "      <td>5</td>\n",
       "      <td>4.5</td>\n",
       "      <td>5580.0</td>\n",
       "      <td>sqft</td>\n",
       "      <td>0.30</td>\n",
       "      <td>acre</td>\n",
       "      <td>98146</td>\n",
       "      <td>3800000.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2517</th>\n",
       "      <td>3</td>\n",
       "      <td>2.5</td>\n",
       "      <td>1390.0</td>\n",
       "      <td>sqft</td>\n",
       "      <td>1570.00</td>\n",
       "      <td>sqft</td>\n",
       "      <td>98126</td>\n",
       "      <td>575000.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2518</th>\n",
       "      <td>3</td>\n",
       "      <td>2.5</td>\n",
       "      <td>2950.0</td>\n",
       "      <td>sqft</td>\n",
       "      <td>0.47</td>\n",
       "      <td>acre</td>\n",
       "      <td>98118</td>\n",
       "      <td>3105000.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2519</th>\n",
       "      <td>5</td>\n",
       "      <td>5.0</td>\n",
       "      <td>3010.0</td>\n",
       "      <td>sqft</td>\n",
       "      <td>4887.00</td>\n",
       "      <td>sqft</td>\n",
       "      <td>98115</td>\n",
       "      <td>1807000.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2520</th>\n",
       "      <td>3</td>\n",
       "      <td>2.0</td>\n",
       "      <td>1301.0</td>\n",
       "      <td>sqft</td>\n",
       "      <td>3000.00</td>\n",
       "      <td>sqft</td>\n",
       "      <td>98103</td>\n",
       "      <td>895000.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>2521 rows Ã— 8 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "      beds  baths    size size_units  lot_size lot_size_units  zip_code  \\\n",
       "0        3    2.5  2590.0       sqft   6000.00           sqft     98144   \n",
       "1        4    2.0  2240.0       sqft      0.31           acre     98106   \n",
       "2        4    3.0  2040.0       sqft   3783.00           sqft     98107   \n",
       "3        4    3.0  3800.0       sqft   5175.00           sqft     98199   \n",
       "4        2    2.0  1042.0       sqft       NaN            NaN     98102   \n",
       "...    ...    ...     ...        ...       ...            ...       ...   \n",
       "2516     5    4.5  5580.0       sqft      0.30           acre     98146   \n",
       "2517     3    2.5  1390.0       sqft   1570.00           sqft     98126   \n",
       "2518     3    2.5  2950.0       sqft      0.47           acre     98118   \n",
       "2519     5    5.0  3010.0       sqft   4887.00           sqft     98115   \n",
       "2520     3    2.0  1301.0       sqft   3000.00           sqft     98103   \n",
       "\n",
       "          price  \n",
       "0      795000.0  \n",
       "1      915000.0  \n",
       "2      950000.0  \n",
       "3     1950000.0  \n",
       "4      950000.0  \n",
       "...         ...  \n",
       "2516  3800000.0  \n",
       "2517   575000.0  \n",
       "2518  3105000.0  \n",
       "2519  1807000.0  \n",
       "2520   895000.0  \n",
       "\n",
       "[2521 rows x 8 columns]"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data = pd.concat([data_train,data_test], ignore_index = True)\n",
    "data"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "5912340d",
   "metadata": {
    "papermill": {
     "duration": 0.008423,
     "end_time": "2024-08-24T19:05:42.447595",
     "exception": false,
     "start_time": "2024-08-24T19:05:42.439172",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## Correcting the units and values for lot size:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "13489e01",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-08-24T19:05:42.466715Z",
     "iopub.status.busy": "2024-08-24T19:05:42.466252Z",
     "iopub.status.idle": "2024-08-24T19:05:42.474200Z",
     "shell.execute_reply": "2024-08-24T19:05:42.472881Z"
    },
    "papermill": {
     "duration": 0.020794,
     "end_time": "2024-08-24T19:05:42.476989",
     "exception": false,
     "start_time": "2024-08-24T19:05:42.456195",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "mask = data['lot_size_units'] == \"acre\"\n",
    "data.loc[mask, 'lot_size_units'] = \"sqft\""
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "c12cbf5e",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-08-24T19:05:42.496194Z",
     "iopub.status.busy": "2024-08-24T19:05:42.495736Z",
     "iopub.status.idle": "2024-08-24T19:05:42.504818Z",
     "shell.execute_reply": "2024-08-24T19:05:42.503569Z"
    },
    "papermill": {
     "duration": 0.021721,
     "end_time": "2024-08-24T19:05:42.507520",
     "exception": false,
     "start_time": "2024-08-24T19:05:42.485799",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "acreToSquareFoot = 43560\n",
    "data.loc[mask, 'lot_size'] *= acreToSquareFoot"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "5059e181",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-08-24T19:05:42.527314Z",
     "iopub.status.busy": "2024-08-24T19:05:42.526821Z",
     "iopub.status.idle": "2024-08-24T19:05:42.542226Z",
     "shell.execute_reply": "2024-08-24T19:05:42.540761Z"
    },
    "papermill": {
     "duration": 0.029863,
     "end_time": "2024-08-24T19:05:42.546046",
     "exception": false,
     "start_time": "2024-08-24T19:05:42.516183",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "median = 5000.0\n",
      "mean = 14801.958667195557\n",
      "Difference was big, so I used median instead of mean.\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/tmp/ipykernel_17/3763975653.py:1: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.\n",
      "The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.\n",
      "\n",
      "For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.\n",
      "\n",
      "\n",
      "  data['lot_size_units'].fillna(\"sqft\", inplace = True)\n",
      "/tmp/ipykernel_17/3763975653.py:2: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.\n",
      "The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.\n",
      "\n",
      "For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.\n",
      "\n",
      "\n",
      "  data['lot_size'].fillna(data['lot_size'].median(), inplace = True)\n"
     ]
    }
   ],
   "source": [
    "data['lot_size_units'].fillna(\"sqft\", inplace = True)\n",
    "data['lot_size'].fillna(data['lot_size'].median(), inplace = True)\n",
    "print('median =', data['lot_size'].median())\n",
    "print('mean =', data['lot_size'].mean())\n",
    "print('Difference was big, so I used median instead of mean.')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "dab2fbea",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-08-24T19:05:42.566278Z",
     "iopub.status.busy": "2024-08-24T19:05:42.565797Z",
     "iopub.status.idle": "2024-08-24T19:05:42.588943Z",
     "shell.execute_reply": "2024-08-24T19:05:42.587661Z"
    },
    "papermill": {
     "duration": 0.036827,
     "end_time": "2024-08-24T19:05:42.592035",
     "exception": false,
     "start_time": "2024-08-24T19:05:42.555208",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>beds</th>\n",
       "      <th>baths</th>\n",
       "      <th>size</th>\n",
       "      <th>size_units</th>\n",
       "      <th>lot_size</th>\n",
       "      <th>lot_size_units</th>\n",
       "      <th>zip_code</th>\n",
       "      <th>price</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>3</td>\n",
       "      <td>2.5</td>\n",
       "      <td>2590.0</td>\n",
       "      <td>sqft</td>\n",
       "      <td>6000.0</td>\n",
       "      <td>sqft</td>\n",
       "      <td>98144</td>\n",
       "      <td>795000.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>4</td>\n",
       "      <td>2.0</td>\n",
       "      <td>2240.0</td>\n",
       "      <td>sqft</td>\n",
       "      <td>13503.6</td>\n",
       "      <td>sqft</td>\n",
       "      <td>98106</td>\n",
       "      <td>915000.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>4</td>\n",
       "      <td>3.0</td>\n",
       "      <td>2040.0</td>\n",
       "      <td>sqft</td>\n",
       "      <td>3783.0</td>\n",
       "      <td>sqft</td>\n",
       "      <td>98107</td>\n",
       "      <td>950000.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>4</td>\n",
       "      <td>3.0</td>\n",
       "      <td>3800.0</td>\n",
       "      <td>sqft</td>\n",
       "      <td>5175.0</td>\n",
       "      <td>sqft</td>\n",
       "      <td>98199</td>\n",
       "      <td>1950000.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2</td>\n",
       "      <td>2.0</td>\n",
       "      <td>1042.0</td>\n",
       "      <td>sqft</td>\n",
       "      <td>5000.0</td>\n",
       "      <td>sqft</td>\n",
       "      <td>98102</td>\n",
       "      <td>950000.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2516</th>\n",
       "      <td>5</td>\n",
       "      <td>4.5</td>\n",
       "      <td>5580.0</td>\n",
       "      <td>sqft</td>\n",
       "      <td>13068.0</td>\n",
       "      <td>sqft</td>\n",
       "      <td>98146</td>\n",
       "      <td>3800000.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2517</th>\n",
       "      <td>3</td>\n",
       "      <td>2.5</td>\n",
       "      <td>1390.0</td>\n",
       "      <td>sqft</td>\n",
       "      <td>1570.0</td>\n",
       "      <td>sqft</td>\n",
       "      <td>98126</td>\n",
       "      <td>575000.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2518</th>\n",
       "      <td>3</td>\n",
       "      <td>2.5</td>\n",
       "      <td>2950.0</td>\n",
       "      <td>sqft</td>\n",
       "      <td>20473.2</td>\n",
       "      <td>sqft</td>\n",
       "      <td>98118</td>\n",
       "      <td>3105000.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2519</th>\n",
       "      <td>5</td>\n",
       "      <td>5.0</td>\n",
       "      <td>3010.0</td>\n",
       "      <td>sqft</td>\n",
       "      <td>4887.0</td>\n",
       "      <td>sqft</td>\n",
       "      <td>98115</td>\n",
       "      <td>1807000.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2520</th>\n",
       "      <td>3</td>\n",
       "      <td>2.0</td>\n",
       "      <td>1301.0</td>\n",
       "      <td>sqft</td>\n",
       "      <td>3000.0</td>\n",
       "      <td>sqft</td>\n",
       "      <td>98103</td>\n",
       "      <td>895000.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>2521 rows Ã— 8 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "      beds  baths    size size_units  lot_size lot_size_units  zip_code  \\\n",
       "0        3    2.5  2590.0       sqft    6000.0           sqft     98144   \n",
       "1        4    2.0  2240.0       sqft   13503.6           sqft     98106   \n",
       "2        4    3.0  2040.0       sqft    3783.0           sqft     98107   \n",
       "3        4    3.0  3800.0       sqft    5175.0           sqft     98199   \n",
       "4        2    2.0  1042.0       sqft    5000.0           sqft     98102   \n",
       "...    ...    ...     ...        ...       ...            ...       ...   \n",
       "2516     5    4.5  5580.0       sqft   13068.0           sqft     98146   \n",
       "2517     3    2.5  1390.0       sqft    1570.0           sqft     98126   \n",
       "2518     3    2.5  2950.0       sqft   20473.2           sqft     98118   \n",
       "2519     5    5.0  3010.0       sqft    4887.0           sqft     98115   \n",
       "2520     3    2.0  1301.0       sqft    3000.0           sqft     98103   \n",
       "\n",
       "          price  \n",
       "0      795000.0  \n",
       "1      915000.0  \n",
       "2      950000.0  \n",
       "3     1950000.0  \n",
       "4      950000.0  \n",
       "...         ...  \n",
       "2516  3800000.0  \n",
       "2517   575000.0  \n",
       "2518  3105000.0  \n",
       "2519  1807000.0  \n",
       "2520   895000.0  \n",
       "\n",
       "[2521 rows x 8 columns]"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "89f24502",
   "metadata": {
    "papermill": {
     "duration": 0.008987,
     "end_time": "2024-08-24T19:05:42.610832",
     "exception": false,
     "start_time": "2024-08-24T19:05:42.601845",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## Information about the data:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "8b591dce",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-08-24T19:05:42.632275Z",
     "iopub.status.busy": "2024-08-24T19:05:42.630986Z",
     "iopub.status.idle": "2024-08-24T19:05:42.648265Z",
     "shell.execute_reply": "2024-08-24T19:05:42.647135Z"
    },
    "papermill": {
     "duration": 0.030342,
     "end_time": "2024-08-24T19:05:42.650626",
     "exception": false,
     "start_time": "2024-08-24T19:05:42.620284",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>beds</th>\n",
       "      <th>baths</th>\n",
       "      <th>size</th>\n",
       "      <th>size_units</th>\n",
       "      <th>lot_size</th>\n",
       "      <th>lot_size_units</th>\n",
       "      <th>zip_code</th>\n",
       "      <th>price</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>3</td>\n",
       "      <td>2.5</td>\n",
       "      <td>2590.0</td>\n",
       "      <td>sqft</td>\n",
       "      <td>6000.0</td>\n",
       "      <td>sqft</td>\n",
       "      <td>98144</td>\n",
       "      <td>795000.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>4</td>\n",
       "      <td>2.0</td>\n",
       "      <td>2240.0</td>\n",
       "      <td>sqft</td>\n",
       "      <td>13503.6</td>\n",
       "      <td>sqft</td>\n",
       "      <td>98106</td>\n",
       "      <td>915000.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>4</td>\n",
       "      <td>3.0</td>\n",
       "      <td>2040.0</td>\n",
       "      <td>sqft</td>\n",
       "      <td>3783.0</td>\n",
       "      <td>sqft</td>\n",
       "      <td>98107</td>\n",
       "      <td>950000.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>4</td>\n",
       "      <td>3.0</td>\n",
       "      <td>3800.0</td>\n",
       "      <td>sqft</td>\n",
       "      <td>5175.0</td>\n",
       "      <td>sqft</td>\n",
       "      <td>98199</td>\n",
       "      <td>1950000.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2</td>\n",
       "      <td>2.0</td>\n",
       "      <td>1042.0</td>\n",
       "      <td>sqft</td>\n",
       "      <td>5000.0</td>\n",
       "      <td>sqft</td>\n",
       "      <td>98102</td>\n",
       "      <td>950000.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   beds  baths    size size_units  lot_size lot_size_units  zip_code  \\\n",
       "0     3    2.5  2590.0       sqft    6000.0           sqft     98144   \n",
       "1     4    2.0  2240.0       sqft   13503.6           sqft     98106   \n",
       "2     4    3.0  2040.0       sqft    3783.0           sqft     98107   \n",
       "3     4    3.0  3800.0       sqft    5175.0           sqft     98199   \n",
       "4     2    2.0  1042.0       sqft    5000.0           sqft     98102   \n",
       "\n",
       "       price  \n",
       "0   795000.0  \n",
       "1   915000.0  \n",
       "2   950000.0  \n",
       "3  1950000.0  \n",
       "4   950000.0  "
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "d8d5f721",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-08-24T19:05:42.671577Z",
     "iopub.status.busy": "2024-08-24T19:05:42.671144Z",
     "iopub.status.idle": "2024-08-24T19:05:42.688244Z",
     "shell.execute_reply": "2024-08-24T19:05:42.687154Z"
    },
    "papermill": {
     "duration": 0.030628,
     "end_time": "2024-08-24T19:05:42.690884",
     "exception": false,
     "start_time": "2024-08-24T19:05:42.660256",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>beds</th>\n",
       "      <th>baths</th>\n",
       "      <th>size</th>\n",
       "      <th>size_units</th>\n",
       "      <th>lot_size</th>\n",
       "      <th>lot_size_units</th>\n",
       "      <th>zip_code</th>\n",
       "      <th>price</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2516</th>\n",
       "      <td>5</td>\n",
       "      <td>4.5</td>\n",
       "      <td>5580.0</td>\n",
       "      <td>sqft</td>\n",
       "      <td>13068.0</td>\n",
       "      <td>sqft</td>\n",
       "      <td>98146</td>\n",
       "      <td>3800000.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2517</th>\n",
       "      <td>3</td>\n",
       "      <td>2.5</td>\n",
       "      <td>1390.0</td>\n",
       "      <td>sqft</td>\n",
       "      <td>1570.0</td>\n",
       "      <td>sqft</td>\n",
       "      <td>98126</td>\n",
       "      <td>575000.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2518</th>\n",
       "      <td>3</td>\n",
       "      <td>2.5</td>\n",
       "      <td>2950.0</td>\n",
       "      <td>sqft</td>\n",
       "      <td>20473.2</td>\n",
       "      <td>sqft</td>\n",
       "      <td>98118</td>\n",
       "      <td>3105000.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2519</th>\n",
       "      <td>5</td>\n",
       "      <td>5.0</td>\n",
       "      <td>3010.0</td>\n",
       "      <td>sqft</td>\n",
       "      <td>4887.0</td>\n",
       "      <td>sqft</td>\n",
       "      <td>98115</td>\n",
       "      <td>1807000.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2520</th>\n",
       "      <td>3</td>\n",
       "      <td>2.0</td>\n",
       "      <td>1301.0</td>\n",
       "      <td>sqft</td>\n",
       "      <td>3000.0</td>\n",
       "      <td>sqft</td>\n",
       "      <td>98103</td>\n",
       "      <td>895000.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "      beds  baths    size size_units  lot_size lot_size_units  zip_code  \\\n",
       "2516     5    4.5  5580.0       sqft   13068.0           sqft     98146   \n",
       "2517     3    2.5  1390.0       sqft    1570.0           sqft     98126   \n",
       "2518     3    2.5  2950.0       sqft   20473.2           sqft     98118   \n",
       "2519     5    5.0  3010.0       sqft    4887.0           sqft     98115   \n",
       "2520     3    2.0  1301.0       sqft    3000.0           sqft     98103   \n",
       "\n",
       "          price  \n",
       "2516  3800000.0  \n",
       "2517   575000.0  \n",
       "2518  3105000.0  \n",
       "2519  1807000.0  \n",
       "2520   895000.0  "
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.tail()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "a8175c85",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-08-24T19:05:42.712800Z",
     "iopub.status.busy": "2024-08-24T19:05:42.711847Z",
     "iopub.status.idle": "2024-08-24T19:05:42.735513Z",
     "shell.execute_reply": "2024-08-24T19:05:42.734144Z"
    },
    "papermill": {
     "duration": 0.037651,
     "end_time": "2024-08-24T19:05:42.738326",
     "exception": false,
     "start_time": "2024-08-24T19:05:42.700675",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 2521 entries, 0 to 2520\n",
      "Data columns (total 8 columns):\n",
      " #   Column          Non-Null Count  Dtype  \n",
      "---  ------          --------------  -----  \n",
      " 0   beds            2521 non-null   int64  \n",
      " 1   baths           2521 non-null   float64\n",
      " 2   size            2521 non-null   float64\n",
      " 3   size_units      2521 non-null   object \n",
      " 4   lot_size        2521 non-null   float64\n",
      " 5   lot_size_units  2521 non-null   object \n",
      " 6   zip_code        2521 non-null   int64  \n",
      " 7   price           2521 non-null   float64\n",
      "dtypes: float64(4), int64(2), object(2)\n",
      "memory usage: 157.7+ KB\n"
     ]
    }
   ],
   "source": [
    "data.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "74e9fbd3",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-08-24T19:05:42.760142Z",
     "iopub.status.busy": "2024-08-24T19:05:42.759676Z",
     "iopub.status.idle": "2024-08-24T19:05:42.789882Z",
     "shell.execute_reply": "2024-08-24T19:05:42.788603Z"
    },
    "papermill": {
     "duration": 0.044235,
     "end_time": "2024-08-24T19:05:42.792616",
     "exception": false,
     "start_time": "2024-08-24T19:05:42.748381",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>beds</th>\n",
       "      <th>baths</th>\n",
       "      <th>size</th>\n",
       "      <th>lot_size</th>\n",
       "      <th>zip_code</th>\n",
       "      <th>price</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>2521.000000</td>\n",
       "      <td>2521.000000</td>\n",
       "      <td>2521.000000</td>\n",
       "      <td>2.521000e+03</td>\n",
       "      <td>2521.000000</td>\n",
       "      <td>2.521000e+03</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>2.877033</td>\n",
       "      <td>2.171956</td>\n",
       "      <td>1758.998017</td>\n",
       "      <td>1.480196e+04</td>\n",
       "      <td>98123.984927</td>\n",
       "      <td>9.668217e+05</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>1.247518</td>\n",
       "      <td>1.004397</td>\n",
       "      <td>921.608036</td>\n",
       "      <td>2.345642e+05</td>\n",
       "      <td>23.118736</td>\n",
       "      <td>8.870111e+05</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.500000</td>\n",
       "      <td>250.000000</td>\n",
       "      <td>5.000000e+02</td>\n",
       "      <td>98101.000000</td>\n",
       "      <td>1.590000e+05</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>2.000000</td>\n",
       "      <td>1.500000</td>\n",
       "      <td>1086.000000</td>\n",
       "      <td>3.600000e+03</td>\n",
       "      <td>98108.000000</td>\n",
       "      <td>6.050000e+05</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>3.000000</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>1580.000000</td>\n",
       "      <td>5.000000e+03</td>\n",
       "      <td>98117.000000</td>\n",
       "      <td>8.130000e+05</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>4.000000</td>\n",
       "      <td>2.500000</td>\n",
       "      <td>2270.000000</td>\n",
       "      <td>6.678000e+03</td>\n",
       "      <td>98126.000000</td>\n",
       "      <td>1.115000e+06</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>15.000000</td>\n",
       "      <td>9.000000</td>\n",
       "      <td>11010.000000</td>\n",
       "      <td>1.089000e+07</td>\n",
       "      <td>98199.000000</td>\n",
       "      <td>2.500000e+07</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "              beds        baths          size      lot_size      zip_code  \\\n",
       "count  2521.000000  2521.000000   2521.000000  2.521000e+03   2521.000000   \n",
       "mean      2.877033     2.171956   1758.998017  1.480196e+04  98123.984927   \n",
       "std       1.247518     1.004397    921.608036  2.345642e+05     23.118736   \n",
       "min       1.000000     0.500000    250.000000  5.000000e+02  98101.000000   \n",
       "25%       2.000000     1.500000   1086.000000  3.600000e+03  98108.000000   \n",
       "50%       3.000000     2.000000   1580.000000  5.000000e+03  98117.000000   \n",
       "75%       4.000000     2.500000   2270.000000  6.678000e+03  98126.000000   \n",
       "max      15.000000     9.000000  11010.000000  1.089000e+07  98199.000000   \n",
       "\n",
       "              price  \n",
       "count  2.521000e+03  \n",
       "mean   9.668217e+05  \n",
       "std    8.870111e+05  \n",
       "min    1.590000e+05  \n",
       "25%    6.050000e+05  \n",
       "50%    8.130000e+05  \n",
       "75%    1.115000e+06  \n",
       "max    2.500000e+07  "
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "ace44ce2",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-08-24T19:05:42.814910Z",
     "iopub.status.busy": "2024-08-24T19:05:42.814465Z",
     "iopub.status.idle": "2024-08-24T19:05:42.827452Z",
     "shell.execute_reply": "2024-08-24T19:05:42.826368Z"
    },
    "papermill": {
     "duration": 0.026823,
     "end_time": "2024-08-24T19:05:42.829818",
     "exception": false,
     "start_time": "2024-08-24T19:05:42.802995",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "beds                11\n",
       "baths               16\n",
       "size              1013\n",
       "size_units           1\n",
       "lot_size          1134\n",
       "lot_size_units       1\n",
       "zip_code            29\n",
       "price              876\n",
       "dtype: int64"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.nunique()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "5a28949f",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-08-24T19:05:42.853139Z",
     "iopub.status.busy": "2024-08-24T19:05:42.851940Z",
     "iopub.status.idle": "2024-08-24T19:05:42.859826Z",
     "shell.execute_reply": "2024-08-24T19:05:42.858762Z"
    },
    "papermill": {
     "duration": 0.021924,
     "end_time": "2024-08-24T19:05:42.862171",
     "exception": false,
     "start_time": "2024-08-24T19:05:42.840247",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([ 3,  4,  2,  1,  5,  6,  9, 15, 14,  8,  7])"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data['beds'].unique()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a1901156",
   "metadata": {
    "papermill": {
     "duration": 0.010147,
     "end_time": "2024-08-24T19:05:42.882660",
     "exception": false,
     "start_time": "2024-08-24T19:05:42.872513",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## Checking for Null Values: "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "7d21b078",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-08-24T19:05:42.906277Z",
     "iopub.status.busy": "2024-08-24T19:05:42.905233Z",
     "iopub.status.idle": "2024-08-24T19:05:42.915754Z",
     "shell.execute_reply": "2024-08-24T19:05:42.914624Z"
    },
    "papermill": {
     "duration": 0.025054,
     "end_time": "2024-08-24T19:05:42.918515",
     "exception": false,
     "start_time": "2024-08-24T19:05:42.893461",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "beds              0\n",
       "baths             0\n",
       "size              0\n",
       "size_units        0\n",
       "lot_size          0\n",
       "lot_size_units    0\n",
       "zip_code          0\n",
       "price             0\n",
       "dtype: int64"
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.isnull().sum()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "58b72cec",
   "metadata": {
    "papermill": {
     "duration": 0.010517,
     "end_time": "2024-08-24T19:05:42.939695",
     "exception": false,
     "start_time": "2024-08-24T19:05:42.929178",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## No. of Houses having n Beds:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "43c6970b",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-08-24T19:05:42.963647Z",
     "iopub.status.busy": "2024-08-24T19:05:42.963181Z",
     "iopub.status.idle": "2024-08-24T19:05:43.331900Z",
     "shell.execute_reply": "2024-08-24T19:05:43.330676Z"
    },
    "papermill": {
     "duration": 0.384046,
     "end_time": "2024-08-24T19:05:43.334578",
     "exception": false,
     "start_time": "2024-08-24T19:05:42.950532",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.countplot(x = 'beds', data = data)\n",
    "plt.title(\"No. of Houses having n Beds\")\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "85d261d5",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-08-24T19:05:43.359025Z",
     "iopub.status.busy": "2024-08-24T19:05:43.358412Z",
     "iopub.status.idle": "2024-08-24T19:05:44.362537Z",
     "shell.execute_reply": "2024-08-24T19:05:44.361099Z"
    },
    "papermill": {
     "duration": 1.020544,
     "end_time": "2024-08-24T19:05:44.366224",
     "exception": false,
     "start_time": "2024-08-24T19:05:43.345680",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1000x1000 with 4 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize = (10,10))\n",
    "plt.subplot(2,2,1)\n",
    "sns.scatterplot(x = 'size', y = 'price', data = data)\n",
    "plt.title('size vs price')\n",
    "\n",
    "plt.subplot(2,2,2)\n",
    "sns.scatterplot(x = 'beds', y = 'price', data = data)\n",
    "plt.title('beds vs price')\n",
    "\n",
    "plt.subplot(2,2,3)\n",
    "sns.scatterplot(x = 'size', y = 'price', data = data)\n",
    "plt.title('size vs price')\n",
    "\n",
    "plt.subplot(2,2,4)\n",
    "sns.scatterplot(x = 'lot_size', y = 'price', data = data)\n",
    "plt.title('lot size vs price')\n",
    "\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "63b7d470",
   "metadata": {
    "papermill": {
     "duration": 0.01185,
     "end_time": "2024-08-24T19:05:44.390717",
     "exception": false,
     "start_time": "2024-08-24T19:05:44.378867",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## Correlation:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "059f79ae",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-08-24T19:05:44.416702Z",
     "iopub.status.busy": "2024-08-24T19:05:44.416274Z",
     "iopub.status.idle": "2024-08-24T19:05:44.435974Z",
     "shell.execute_reply": "2024-08-24T19:05:44.434833Z"
    },
    "papermill": {
     "duration": 0.035836,
     "end_time": "2024-08-24T19:05:44.438617",
     "exception": false,
     "start_time": "2024-08-24T19:05:44.402781",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>beds</th>\n",
       "      <th>baths</th>\n",
       "      <th>size</th>\n",
       "      <th>lot_size</th>\n",
       "      <th>price</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>beds</th>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.660099</td>\n",
       "      <td>0.770757</td>\n",
       "      <td>-0.047101</td>\n",
       "      <td>0.316855</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>baths</th>\n",
       "      <td>0.660099</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.675225</td>\n",
       "      <td>-0.035246</td>\n",
       "      <td>0.349062</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>size</th>\n",
       "      <td>0.770757</td>\n",
       "      <td>0.675225</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>-0.043275</td>\n",
       "      <td>0.476061</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>lot_size</th>\n",
       "      <td>-0.047101</td>\n",
       "      <td>-0.035246</td>\n",
       "      <td>-0.043275</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>-0.023644</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>price</th>\n",
       "      <td>0.316855</td>\n",
       "      <td>0.349062</td>\n",
       "      <td>0.476061</td>\n",
       "      <td>-0.023644</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "              beds     baths      size  lot_size     price\n",
       "beds      1.000000  0.660099  0.770757 -0.047101  0.316855\n",
       "baths     0.660099  1.000000  0.675225 -0.035246  0.349062\n",
       "size      0.770757  0.675225  1.000000 -0.043275  0.476061\n",
       "lot_size -0.047101 -0.035246 -0.043275  1.000000 -0.023644\n",
       "price     0.316855  0.349062  0.476061 -0.023644  1.000000"
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "correlation = data.drop(['size_units','lot_size_units','zip_code'], axis = 1).corr()\n",
    "correlation"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "b1752f3b",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-08-24T19:05:44.466190Z",
     "iopub.status.busy": "2024-08-24T19:05:44.464977Z",
     "iopub.status.idle": "2024-08-24T19:05:44.838948Z",
     "shell.execute_reply": "2024-08-24T19:05:44.837582Z"
    },
    "papermill": {
     "duration": 0.390476,
     "end_time": "2024-08-24T19:05:44.841659",
     "exception": false,
     "start_time": "2024-08-24T19:05:44.451183",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.heatmap(correlation, cmap = 'coolwarm', annot = True)\n",
    "plt.show()"
   ]
  }
 ],
 "metadata": {
  "kaggle": {
   "accelerator": "none",
   "dataSources": [
    {
     "datasetId": 2758754,
     "sourceId": 4765938,
     "sourceType": "datasetVersion"
    }
   ],
   "dockerImageVersionId": 30761,
   "isGpuEnabled": false,
   "isInternetEnabled": true,
   "language": "python",
   "sourceType": "notebook"
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.14"
  },
  "papermill": {
   "default_parameters": {},
   "duration": 8.5514,
   "end_time": "2024-08-24T19:05:45.577408",
   "environment_variables": {},
   "exception": null,
   "input_path": "__notebook__.ipynb",
   "output_path": "__notebook__.ipynb",
   "parameters": {},
   "start_time": "2024-08-24T19:05:37.026008",
   "version": "2.6.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
